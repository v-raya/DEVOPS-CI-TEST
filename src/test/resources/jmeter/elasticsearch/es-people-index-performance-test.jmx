<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="CWS ES Performance Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="USER_COUNT" elementType="Argument">
            <stringProp name="Argument.name">USER_COUNT</stringProp>
            <stringProp name="Argument.value">${__P(user.count, 5)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Simultaneous users</stringProp>
          </elementProp>
          <elementProp name="SEARCH_TERM_COUNT" elementType="Argument">
            <stringProp name="Argument.name">SEARCH_TERM_COUNT</stringProp>
            <stringProp name="Argument.value">${__P(search.term.count, 10)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Search terms per user</stringProp>
          </elementProp>
          <elementProp name="RAMP_UP_TIME" elementType="Argument">
            <stringProp name="Argument.name">RAMP_UP_TIME</stringProp>
            <stringProp name="Argument.value">${__P(ramp.up.time, 30)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOOP_COUNT" elementType="Argument">
            <stringProp name="Argument.name">LOOP_COUNT</stringProp>
            <stringProp name="Argument.value">${__P(loop.count, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ES_HOST" elementType="Argument">
            <stringProp name="Argument.name">ES_HOST</stringProp>
            <stringProp name="Argument.value">${__P(es.host, elasticsearch.preint.cwds.io)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ES_PORT" elementType="Argument">
            <stringProp name="Argument.name">ES_PORT</stringProp>
            <stringProp name="Argument.value">${__P(es.port, 9200)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ES_INDEX" elementType="Argument">
            <stringProp name="Argument.name">ES_INDEX</stringProp>
            <stringProp name="Argument.value">${__P(es.index, people)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ES_DOC_TYPE" elementType="Argument">
            <stringProp name="Argument.name">ES_DOC_TYPE</stringProp>
            <stringProp name="Argument.value">${__P(es.doc.type, person)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ES_AUTH_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">ES_AUTH_TOKEN</stringProp>
            <stringProp name="Argument.value">${__P(es.auth.token, ZWxhc3RpYzpjaGFuZ2VtZQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DB_URL" elementType="Argument">
            <stringProp name="Argument.name">DB_URL</stringProp>
            <stringProp name="Argument.value">${__P(db.url, jdbc:db2://db2.preint.cwds.io:50000/DB0TDEV)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DB_SCHEMA" elementType="Argument">
            <stringProp name="Argument.name">DB_SCHEMA</stringProp>
            <stringProp name="Argument.value">${__P(db.schema, CWSRS1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DB_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">DB_USERNAME</stringProp>
            <stringProp name="Argument.value">${__P(db.username, db2inst1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DB_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">DB_PASSWORD</stringProp>
            <stringProp name="Argument.value">${__P(db.password, db2inst1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Basic ${ES_AUTH_TOKEN}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ES People Index Test" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LOOP_COUNT}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${USER_COUNT}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP_TIME}</stringProp>
        <longProp name="ThreadGroup.start_time">1508914388000</longProp>
        <longProp name="ThreadGroup.end_time">1508914388000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="JDBC Controller" enabled="true"/>
        <hashTree>
          <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
            <stringProp name="dataSource">performance</stringProp>
            <stringProp name="poolMax">0</stringProp>
            <stringProp name="timeout">10000</stringProp>
            <stringProp name="trimInterval">60000</stringProp>
            <boolProp name="autocommit">true</boolProp>
            <stringProp name="transactionIsolation">DEFAULT</stringProp>
            <boolProp name="keepAlive">true</boolProp>
            <stringProp name="connectionAge">5000</stringProp>
            <stringProp name="checkQuery"></stringProp>
            <stringProp name="dbUrl">${DB_URL}</stringProp>
            <stringProp name="driver">com.ibm.db2.jcc.DB2Driver</stringProp>
            <stringProp name="username">${DB_USERNAME}</stringProp>
            <stringProp name="password">${DB_PASSWORD}</stringProp>
          </JDBCDataSource>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
            <stringProp name="dataSource">performance</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT
IDENTIFIER AS CLIENT_ID_TERM, 
(
  RTRIM(COM_FST_NM) || &apos; &apos; || 
  RTRIM(COM_LST_NM) || &apos; &apos; || 
  RTRIM(SS_NO) || &apos; &apos; || 
  VARCHAR_FORMAT(BIRTH_DT, &apos;mmddyyyy&apos;)
) AS CROSS_FIELD_TERM,
RAND() AS RAND_NO
FROM ${DB_SCHEMA}.CLIENT_T 
WHERE 
  COM_FST_NM IS NOT NULL AND 
  COM_LST_NM IS NOT NULL AND 
  SS_NO IS NOT NULL AND 
  BIRTH_DT IS NOT NULL 
ORDER BY RAND_NO
FETCH FIRST ${SEARCH_TERM_COUNT} ROWS ONLY</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">CLIENT_ID_TERM, CROSS_FIELD_TERM</stringProp>
            <stringProp name="resultVariable">clientRecords</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ID Query Controller" enabled="true">
          <stringProp name="ForeachController.inputVal">CLIENT_ID_TERM</stringProp>
          <stringProp name="ForeachController.returnVal">clientIdTerm</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ID Query" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: [&#xd;
        {&#xd;
          &quot;match&quot;: {&#xd;
            &quot;id&quot;: &quot;${clientIdTerm}&quot;&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;_source&quot;: [&#xd;
    &quot;id&quot;,&#xd;
    &quot;relationships&quot;,&#xd;
    &quot;screenings&quot;,&#xd;
    &quot;referrals&quot;,&#xd;
    &quot;cases&quot;&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ES_HOST}</stringProp>
            <stringProp name="HTTPSampler.port">${ES_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${ES_INDEX}/${ES_DOC_TYPE}/_search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-733631846">successful</stringProp>
              <stringProp name="1372468121">&quot;failed&quot;:0</stringProp>
              <stringProp name="2139691751">&quot;timed_out&quot;:false</stringProp>
              <stringProp name="3202880">hits</stringProp>
              <stringProp name="-1554387084">${clientIdTerm}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data_as_document</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="CrossField Query Controller" enabled="true">
          <stringProp name="ForeachController.inputVal">CROSS_FIELD_TERM</stringProp>
          <stringProp name="ForeachController.returnVal">crossFieldTerm</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - CrossField Query" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: [&#xd;
        {&#xd;
          &quot;multi_match&quot;: {&#xd;
            &quot;query&quot;: &quot;${crossFieldTerm}&quot;,&#xd;
            &quot;type&quot;: &quot;cross_fields&quot;,&#xd;
            &quot;operator&quot;: &quot;and&quot;,&#xd;
            &quot;fields&quot;: [&#xd;
              &quot;searchable_name&quot;,&#xd;
              &quot;searchable_date_of_birth&quot;,&#xd;
              &quot;ssn&quot;&#xd;
            ]&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;_source&quot;: [&#xd;
    &quot;id&quot;,&#xd;
    &quot;legacy_source_table&quot;,&#xd;
    &quot;first_name&quot;,&#xd;
    &quot;middle_name&quot;,&#xd;
    &quot;last_name&quot;,&#xd;
    &quot;name_suffix&quot;,&#xd;
    &quot;gender&quot;,&#xd;
    &quot;date_of_birth&quot;,&#xd;
    &quot;ssn&quot;,&#xd;
    &quot;languages&quot;,&#xd;
    &quot;races&quot;,&#xd;
    &quot;ethnicity&quot;,&#xd;
    &quot;addresses.id&quot;,&#xd;
    &quot;addresses.street_name&quot;,&#xd;
    &quot;addresses.street_number&quot;,&#xd;
    &quot;addresses.city&quot;,&#xd;
    &quot;addresses.state_code&quot;,&#xd;
    &quot;addresses.zip&quot;,&#xd;
    &quot;addresses.type&quot;,&#xd;
    &quot;phone_numbers.id&quot;,&#xd;
    &quot;phone_numbers.number&quot;,&#xd;
    &quot;phone_numbers.type&quot;,&#xd;
    &quot;highlight&quot;,&#xd;
    &quot;legacy_descriptor&quot;,&#xd;
    &quot;sensitivity_indicator&quot;,&#xd;
    &quot;race_ethnicity&quot;&#xd;
  ],&#xd;
  &quot;highlight&quot;: {&#xd;
    &quot;order&quot;: &quot;score&quot;,&#xd;
    &quot;number_of_fragments&quot;: 3,&#xd;
    &quot;require_field_match&quot;: false,&#xd;
    &quot;fields&quot;: {&#xd;
      &quot;*&quot;: {}&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ES_HOST}</stringProp>
            <stringProp name="HTTPSampler.port">${ES_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${ES_INDEX}/${ES_DOC_TYPE}/_search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-733631846">successful</stringProp>
              <stringProp name="1372468121">&quot;failed&quot;:0</stringProp>
              <stringProp name="2139691751">&quot;timed_out&quot;:false</stringProp>
              <stringProp name="3202880">hits</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data_as_document</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
